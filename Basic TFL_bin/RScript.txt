en<-read.csv("TFL-en_bin.csv")
ar<-read.csv("TFL-ar_bin.csv")
ca<-read.csv("TFL-ca_bin.csv")
ceb<-read.csv("TFL-ceb_bin.csv")
cs<-read.csv("TFL-cs_bin.csv")
de<-read.csv("TFL-de_bin.csv")
es<-read.csv("TFL-es_bin.csv")
fa<-read.csv("TFL-fa_bin.csv")
fi<-read.csv("TFL-fi_bin.csv")
fr<-read.csv("TFL-fr_bin.csv")
hu<-read.csv("TFL-hu_bin.csv")
id<-read.csv("TFL-id_bin.csv")
it<-read.csv("TFL-it_bin.csv")
ja<-read.csv("TFL-ja_bin.csv")
ko<-read.csv("TFL-ko_bin.csv")
nl<-read.csv("TFL-nl_bin.csv")
no<-read.csv("TFL-no_bin.csv")
pl<-read.csv("TFL-pl_bin.csv")
pt<-read.csv("TFL-pt_bin.csv")
ru<-read.csv("TFL-ru_bin.csv")
sv<-read.csv("TFL-sv_bin.csv")
uk<-read.csv("TFL-uk_bin.csv")
vi<-read.csv("TFL-vi_bin.csv")
war<-read.csv("TFL-war_bin.csv")
zh<-read.csv("TFL-zh_bin.csv")

graph <- ggplot(NULL, aes(x=DISTANCE_BIN, y=SR_Percentile)) + stat_summary(fun.y=mean, geom="line",data = en, color = 'red') + stat_summary(fun.y=mean, geom="line",data = ar, color='chocolate') + stat_summary(fun.y=mean, geom="line",data = ca, color = 'aquamarine')  + stat_summary(fun.y=mean, geom="line",data = cs, color = 'cadetblue') + stat_summary(fun.y=mean, geom="line",data = de, color = 'blue') + stat_summary(fun.y=mean, geom="line",data = es, color = 'darkgreen')  + stat_summary(fun.y=mean, geom="line",data = fi, color = 'deepskyblue') + stat_summary(fun.y=mean, geom="line",data = fr, color = 'deep pink') + stat_summary(fun.y=mean, geom="line",data = hu, color = 'darkviolet') + stat_summary(fun.y=mean, geom="line",data = it, color = 'violet') + stat_summary(fun.y=mean, geom="line",data = ja, color = 'goldenrod') + stat_summary(fun.y=mean, geom="line",data = ko, color = 'hotpink') + stat_summary(fun.y=mean, geom="line",data = nl, color = 'indianred4') + stat_summary(fun.y=mean, geom="line",data =no, color = 'lightcoral') + stat_summary(fun.y=mean, geom="line",data = pt, color = 'yellow') + stat_summary(fun.y=mean, geom="line",data = ru, color = 'mediumorchid') + stat_summary(fun.y=mean, geom="line",data = sv, color = 'limegreen')  + stat_summary(fun.y=mean, geom="line",data = vi, color = 'navy') +  stat_summary(fun.y=mean, geom="line",data = zh, color = 'royalblue') + xlim(0, 15000)

graph <- ggplot(NULL, aes(x=DISTANCE_BIN, y=SR_Percentile)) + stat_summary(fun.y=mean, geom="line",data = en, color = 'red', alpha = 0.3) + stat_summary(fun.y=mean, geom="line",data = ar, color='chocolate', alpha = 0.3) + stat_summary(fun.y=mean, geom="line",data = ca, color = 'aquamarine', alpha = 0.3)  + stat_summary(fun.y=mean, geom="line",data = cs, color = 'cadetblue', alpha = 0.3) + stat_summary(fun.y=mean, geom="line",data = de, color = 'blue', alpha = 0.3) + stat_summary(fun.y=mean, geom="line",data = es, color = 'darkgreen', alpha = 0.3)  + stat_summary(fun.y=mean, geom="line",data = fi, color = 'deepskyblue', alpha = 0.3) + stat_summary(fun.y=mean, geom="line",data = fr, color = 'deep pink', alpha = 0.3) + stat_summary(fun.y=mean, geom="line",data = hu, color = 'darkviolet', alpha = 0.3) + stat_summary(fun.y=mean, geom="line",data = it, color = 'violet', alpha = 0.3) + stat_summary(fun.y=mean, geom="line",data = ja, color = 'goldenrod', alpha = 0.3) + stat_summary(fun.y=mean, geom="line",data = ko, color = 'hotpink', alpha = 0.3) + stat_summary(fun.y=mean, geom="line",data = nl, color = 'indianred4', alpha = 0.3) + stat_summary(fun.y=mean, geom="line",data =no, color = 'lightcoral', alpha = 0.3) + stat_summary(fun.y=mean, geom="line",data = pt, color = 'yellow', alpha = 0.3) + stat_summary(fun.y=mean, geom="line",data = ru, color = 'mediumorchid', alpha = 0.3) + stat_summary(fun.y=mean, geom="line",data = sv, color = 'limegreen', alpha = 0.3)  + stat_summary(fun.y=mean, geom="line",data = vi, color = 'navy', alpha = 0.3) +  stat_summary(fun.y=mean, geom="line",data = zh, color = 'royalblue', alpha = 0.3) + stat_summary(fun.y=mean, geom="line",data = kvalue, color = 'black')  + xlim(0, 15000) + xlab("Straight-line Distance(km)") + ylab("Semantic Relatedness Percentile") +theme( axis.text.x = element_text(size=16),axis.title.x = element_text(size=20),  axis.text.y = element_text(size=16),axis.title.y = element_text(size=20))
